/**
 * Custom element styles
 * prefix: s-
 */
.s-safe-area {
  position: relative;
  padding: 0 1rem;
}

.s-headless {
  position: relative;
  width: 100%;
  height: 100vh;
  overflow: hidden;
}

.s-card {
  position: relative;
  display: block;
  background-color: var(--color-background-1);
  border: 1px solid var(--color-border-default);
  border-radius: 0.75rem;
  padding: 0.75rem;
}

.s-input-wrap {
  position: relative;
  display: flex;
  flex-wrap: wrap;
  flex-direction: column;
  justify-content: space-between;
  gap: 0.25rem;
  width: 100%;

  & .label {
    display: inline-block;
    padding: 0 0.5rem;
    font-size: var(--text-sm);
    color: var(--color-tx-gray-2);
    font-weight: var(--font-weight-medium);
    line-height: 1;
    pointer-events: none;
    text-align: start;
    order: -1;

    &.error {
      color: var(--color-tx-red);
    }

    &.sub {
      order: 1;
    }

    &.end {
      align-self: flex-end;
    }

    &.title {
      order: -1;
      font-weight: var(--font-weight-semibold);
      user-select: none;
    }
  }

  & .s-input-box {
    position: relative;

    &:has(.input-prefix) .s-input-field {
      padding-left: calc(1rem + 24px);
    }

    &:has(.input-suffix) .s-input-field {
      padding-right: calc(1rem + 24px);
    }

    & .input-prefix, & .input-suffix {
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
      width: 24px;
      height: 24px;
      color: var(--color-tx-gray-3);
      font-size: var(--text-sm);
      pointer-events: none;
    }

    & .input-prefix {
      left: 1rem;
    }

    & .input-suffix {
      right: 1rem;
    }
  }
}

.s-input-field {
  display: block;
  width: 100%;
  padding: 0.75rem 1rem;
  font-size: 1rem;
  line-height: 1;
  color: var(--color-tx-gray-1);
  background-color: transparent;
  border: 2px solid var(--color-border-default);
  border-radius: 0.5rem;
  transition: all .15s ease-in-out;

  &::placeholder {
    color: var(--color-tx-gray-3);
    opacity: 1;
  }

  &:hover {
    border-color: var(--color-border-hover);
  }

  &:focus {
    border-color: var(--color-tx-primary);
    box-shadow: 0 0 0 0.25rem rgba(from var(--color-bg-primary) r g b / 0.75);
    outline: none;
  }

  &:disabled {
    cursor: not-allowed;
    opacity: 0.5;
    border: none !important;
    background-color: var(--v-s-default-lighter) !important;
  }
}

textarea {
  resize: none;
  overflow-y: hidden;
}

.s-btn {
  display: inline-block;
  vertical-align: bottom;
  text-align: center;
  user-select: none;
  padding: 0.75rem 1rem;
  line-height: 1;
  border-radius: 0.5rem;
  font-weight: 600;
  transform: translateY(0);
  /* default color */
  color: var(--color-white);
  background-color: var(--color-bg-secondary);
  box-shadow: var(--shadow-md);
  transition: all .15s ease-in-out;

  &:hover {
    background-color: var(--v-s-default-darker);
  }

  &:active {
    background-color: var(--v-s-default-lighter);
    transform: translateY(2px);
    box-shadow: var(--shadow-inner);
  }

  &:disabled {
    cursor: not-allowed;
    opacity: 0.5;
    border: none !important;
    background-color: var(--v-s-default-lighter) !important;
    box-shadow: none;

    &:active {
      transform: none;
    }
  }

  &.btn-primary {
    background-color: var(--color-tx-primary);

    &:hover {
      background-color: var(--v-s-primary-darker);
    }

    &:active {
      background-color: var(--v-s-primary-lighter);
    }
  }

  &.btn-red {
    background-color: var(--color-tx-red);

    &:hover {
      background-color: var(--v-s-red-darker);
    }

    &:active {
      background-color: var(--v-s-red-lighter);
    }
  }

  &.btn-amber {
    background-color: var(--color-tx-amber);

    &:hover {
      background-color: var(--v-s-amber-darker);
    }

    &:active {
      background-color: var(--v-s-amber-lighter);
    }
  }

  &.btn-green {
    background-color: var(--color-tx-green);

    &:hover {
      background-color: var(--v-s-green-darker);
    }

    &:active {
      background-color: var(--v-s-green-lighter);
    }
  }

  &.btn-purple {
    background-color: var(--color-tx-purple);

    &:hover {
      background-color: var(--v-s-purple-darker);
    }

    &:active {
      background-color: var(--v-s-purple-lighter);
    }
  }

  &.btn-outline {
    color: var(--color-tx-gray-1);
    background-color: transparent;
    border: 2px solid var(--color-tx-gray-1);
    box-shadow: none;

    &:hover {
      border-color: var(--v-s-outline-darkest);
      background-color: var(--color-background-3);
    }

    &:active {
      border-color: var(--v-s-outline-lightest);
      background-color: var(--color-background-3);
    }
  }
}

.switch {
  --switch-width: 32px;
  --switch-height: 20px;
  --switch-padding: 2px; /* switch border width */
  --switch-color-active: var(--color-tx-primary);
  --switch-handle-size: calc(var(--switch-height) - (var(--switch-padding) * 2));
  --switch-handle-translation: calc(var(--switch-width) - var(--switch-height));

  position: relative;
  display: inline-flex;
  align-items: center;
  user-select: none;
  cursor: pointer;

  & input {
    position: absolute;
    opacity: 0;
    width: 0;
    height: 0;
  }

  /* Switch track */

  & .control {
    position: relative;
    display: inline-block;
    width: var(--switch-width);
    height: var(--switch-height);
    background-color: var(--color-background-2);
    border-radius: 9999px;
    transition: all 0.15s cubic-bezier(0.4, 0, 0.2, 1);
    overflow: hidden;

    /* Switch handle/thumb */

    &::after {
      content: '';
      position: absolute;
      top: var(--switch-padding);
      left: var(--switch-padding);
      width: var(--switch-handle-size);
      height: var(--switch-handle-size);
      background-color: theme('colors.white');
      border-radius: 50%;
      box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.1);
      transform: translateX(0); /* Reset initial position */
      transition: all 0.15s cubic-bezier(0.4, 0, 0.2, 1);
      will-change: transform; /* Optimize animation performance */
    }
  }

  /* Focus styles */

  & input:focus ~ .control {
    /* box-shadow: 0 0 0 2px #fff, 0 0 0 4px var(--switch-color-active); */
    box-shadow: 0 0 0 0.25rem rgba(from var(--color-bg-primary) r g b / 0.75);
  }

  /* Checked state */

  & input:checked ~ .control {
    background-color: var(--switch-color-active);

    &::after {
      transform: translateX(var(--switch-handle-translation));
    }
  }
}

.s-backdrop {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.3);
  backdrop-filter: blur(4px);
  z-index: 7;
}

.icon {
  display: inline-block;
  mask-size: contain;
  mask-repeat: no-repeat;
  mask-position: center;
  vertical-align: top;
  background-color: currentColor;
  mask-image: var(--icon-url);
  -webkit-mask-image: var(--icon-url);
}
